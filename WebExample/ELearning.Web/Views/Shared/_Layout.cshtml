<!doctype html>
<html lang="zh-cn" dir="ltr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta name="msapplication-TileColor" content="#2d89ef">
    <meta name="theme-color" content="#4188c9">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="HandheldFriendly" content="True">
    <meta name="MobileOptimized" content="320">

    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico" />

    <title></title>


    <link href="/bootStrap431/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="/tablerUI/assets/css/dashboard.css" rel="stylesheet" />

    <script src="~/tablerUI/assets/js/vendors/jquery-3.2.1.min.js"></script>
    <script src="~/tablerUI/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/tablerUI/assets/js/popper.min.js"></script>
    <script src="~/tablerUI/assets/js/vendors/circle-progress.min.js"></script>
    <script src="~/tablerUI/assets/js/vendors/jquery.sparkline.min.js"></script>
    <script src="~/tablerUI/assets/js/vendors/jquery.tablesorter.min.js"></script>
    <script src="~/tablerUI/assets/js/vendors/selectize.min.js"></script>

    <script src="/tablerUI/assets/js/core.js"></script>
    <script src="/tablerUI/assets/js/dashboard.js"></script>
    <script src="~/tablerUI/assets/js/require.min.js"></script>
    <script>
        requirejs.config({
            baseUrl: '../../tablerUI'
        });
    </script>
</head>

<body class="">

    <h1 class="title"></h1>
    <canvas width="1600" height="100" id="fizz" style="background-color: rgb(61, 136, 53);"></canvas>
    <div class="page">
        <div class="flex-fill">
            <!-- 第一条水平导航条 -->
            <div class="header py-4">
                <div class="container">
                    <div class="d-flex">
                        <!-- 首页 Logo -->
                        <a class="header-brand" href="/Home/Index">
                            <img src="~/images/logo.png" class="header-brand-img" alt="系统首页">
                        </a>
                        <!-- 登录或者系统用户信息 -->
                        <div class="d-flex order-lg-2 ml-auto">
                            @await Component.InvokeAsync("PortalUserInfo")
                        </div>
                        <a href="#" class="header-toggler d-lg-none ml-3 ml-lg-0" data-toggle="collapse" data-target="#headerMenuCollapse">
                            <span class="header-toggler-icon"></span>
                        </a>

                    </div>
                </div>
            </div>
            <!-- 第二条水平导航条 -->
            <div class="header collapse d-lg-flex p-0" id="headerMenuCollapse">
                <div class="container">
                    <div class="row align-items-center">
                        <!-- 站点搜索组件 -->
                        <div class="col-lg-3 ml-auto">
                            <form class="input-icon my-3 my-lg-0">
                                <input type="search" class="form-control header-search" placeholder="搜素&hellip;" tabindex="1">
                                <div class="input-icon-addon">
                                    <i class="fe fe-search"></i>
                                </div>
                            </form>
                        </div>
                        <!-- 操作导航组件 -->
                        <div class="col-lg order-lg-first">
                            <ul class="nav nav-tabs border-0 flex-column flex-lg-row">
                                <li class="nav-item">
                                    <a asp-area="" asp-controller="Home" asp-action="Index" class="nav-link "><i class="fe fe-home"></i> 首页</a>
                                </li>
                                <li class="nav-item">
                                    <a asp-area="" asp-controller="News" asp-action="Index" class="nav-link "></i>时政</a>
                                </li>
                                <li class="nav-item">
                                    <a asp-area="" asp-controller="News" asp-action="Index" class="nav-link "></i>体育</a>
                                </li>
                                <li class="nav-item">
                                    <a asp-area="" asp-controller="News" asp-action="Index" class="nav-link "></i>美食</a>
                                </li>
                                <li class="nav-item">
                                    <a asp-area="" asp-controller="News" asp-action="Index" class="nav-link "></i>旅游</a>
                                </li>

                                @*<li class="nav-item dropdown">
                    <a asp-area="" asp-controller="Home" asp-action="Contact" class="nav-link"><i class="fe fe-check-square"></i> 联系我们</a>
                </li>*@
                                <li class="nav-item">
                                    <a asp-area="" asp-controller="Home" asp-action="About" class="nav-link"><i class="fe fe-image"></i> 关于我们</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 数据处理工作区 -->
            <div class="my-3 my-md-5">
                <div class="container">
                    @RenderBody()
                </div>
            </div>

        </div>

        <!-- 页脚 -->
        <footer class="footer">
                    <div class="col-12 col-lg-auto mt-3 mt-lg-0 text-center">
                        lzzy © 2017 版权所有。
                    </div>
        </footer>
    </div>
    <script>
        (function () {
            this.Bubble = (function () {
                class Bubble {
                    constructor(x, y, r, createdAt) {
                        this.x = x;
                        this.y = y;
                        this.r = r;
                        this.createdAt = createdAt;
                    }

                    velocity() {
                        return this.r / 20 * Bubble.MAX_V;
                    }

                    grow(now) {
                        if (!this.rising && this.r <= Bubble.MAX_R) {
                            return this.r += Bubble.GROWTH_RATE * (now - this.createdAt);
                        }
                    }

                    move(now) {
                        if (this.rising) {
                            return this.y -= (now - this.startedRisingAt) * this.velocity();
                        }
                    }

                    rise() {
                        if (!this.rising && this.r > 2) {
                            this.rising = Math.random() < 0.15 * (this.r / Bubble.MAX_R);
                            if (this.rising) {
                                return this.startedRisingAt = new Date().getTime();
                            }
                        }
                    }

                };

                Bubble.MAX_R = 20;

                Bubble.MAX_V = 0.02;

                Bubble.GROWTH_RATE = 0.00005;

                return Bubble;

            }).call(this);

            this.RisingBubbles = (function () {
                var rand, randInt;

                class RisingBubbles {
                    constructor(id, maxBubbles) {
                        var elem, i, j, ref;
                        this.maxBubbles = maxBubbles;
                        this.canvas = document.getElementById(id);
                        elem = $('#' + id);
                        elem.css('background-color', '#3d8835');
                        elem.click(() => {
                            var b, j, len, ref, results, ts;
                            ts = new Date().getTime();
                            ref = this.bubbles;
                            results = [];
                            for (j = 0, len = ref.length; j < len; j++) {
                                b = ref[j];
                                if (!b.rising) {
                                    b.rising = true;
                                    results.push(b.startedRisingAt = ts);
                                } else {
                                    results.push(void 0);
                                }
                            }
                            return results;
                        });
                        this.canvas.width = this.canvas.clientWidth;
                        this.canvas.height = this.canvas.clientHeight;
                        this.ctx = this.canvas.getContext('2d');
                        this.ctx.fillStyle = '#FFFFFF';
                        this.bubbles = [];
                        this.lastFrame = new Date().getTime();
                        for (i = j = 1, ref = randInt(0, this.maxBubbles); 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
                            this.bubbles.push(new Bubble(randInt(0, this.canvas.width), randInt(0, this.canvas.height), rand(0, Bubble.MAX_R), new Date().getTime()));
                        }
                    }

                    draw() {
                        return this.run(new Date().getTime());
                    }

                    run(now) {
                        var bubble, j, len, ref;
                        this.update(now);
                        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
                        ref = this.bubbles;
                        for (j = 0, len = ref.length; j < len; j++) {
                            bubble = ref[j];
                            this.ctx.moveTo(bubble.x, bubble.y);
                            this.ctx.beginPath();
                            this.ctx.arc(bubble.x, bubble.y, bubble.r, 0, 2 * Math.PI);
                            this.ctx.fill();
                        }
                        return requestAnimationFrame(() => {
                            return this.run(new Date().getTime());
                        });
                    }

                    update(now) {
                        var b, i, j, k, len, ref, ref1, results;
                        ref = this.bubbles;
                        for (j = 0, len = ref.length; j < len; j++) {
                            b = ref[j];
                            b.grow(now);
                            b.rise();
                            b.move(now);
                        }
                        this.bubbles = (function () {
                            var k, len1, ref1, results;
                            ref1 = this.bubbles;
                            results = [];
                            for (k = 0, len1 = ref1.length; k < len1; k++) {
                                b = ref1[k];
                                if (b.y + b.r >= 0) {
                                    results.push(b);
                                }
                            }
                            return results;
                        }).call(this);
                        if (this.maxBubbles - this.bubbles.length > 0) {
                            results = [];
                            for (i = k = 1, ref1 = randInt(0, this.maxBubbles - this.bubbles.length); 1 <= ref1 ? k <= ref1 : k >= ref1; i = 1 <= ref1 ? ++k : --k) {
                                results.push(this.bubbles.push(new Bubble(randInt(0, this.canvas.width), randInt(0, this.canvas.height), 1, new Date().getTime())));
                            }
                            return results;
                        }
                    }

                };

                randInt = function (min, max) {
                    return Math.floor(Math.random() * (max - min) + min);
                };

                rand = function (min, max) {
                    return Math.floor(Math.random() * (max - min) + min);
                };

                return RisingBubbles;

            }).call(this);

            $((function () {
                var fizz;
                fizz = new RisingBubbles('fizz', 500);
                return fizz.draw();
            }));

        }).call(this);

    </script>
</body>
</html>
